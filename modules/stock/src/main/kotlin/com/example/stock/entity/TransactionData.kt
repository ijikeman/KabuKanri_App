package com.example.stock.model

import jakarta.persistence.Entity
import jakarta.persistence.Table
import jakarta.persistence.GenerationType
import jakarta.persistence.GeneratedValue
import jakarta.persistence.Id
import jakarta.persistence.FetchType
import jakarta.persistence.JoinColumn
import jakarta.persistence.ManyToOne
import jakarta.persistence.Column
import java.time.LocalDate

@Entity
@Table(name = "transactions")
data class Transactions(
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    val id: Int = 0,

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "owner_id", nullable = false)
    val owner: Owners,

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "stock_id", nullable = false)
    val stock: Stocks,

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "broker_id", nullable = false)
    val broker: Brokers,

    @Column(name = "price_per_share", nullable = false)
    val pricePerShare: Int,

    @Column(name = "transaction_type", nullable = false)
    val transactionType: String,

    @Column(name = "quantity", nullable = false)
    val quantity: Int,

    @Column(name = "fee", nullable = false)
    val fee: Int,

    @Column(name = "transaction_at", nullable = false)
    val transactionAt: LocalDate
);
/* 
-- 取引（履歴）テーブル
CREATE TABLE transactions (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    owner_id INT NOT NULL, -- 所有者ID
    stock_id INT NOT NULL, -- 銘柄ID
    broker_id INT NOT NULL, -- 証券会社ID
    price_per_share INT NOT NULL, -- 1株あたりの取引金額
    transaction_type VARCHAR(8), -- 取引種別(BUYまたはSELL)
    quantity INT NOT NULL, -- 取引株数
    fee INT NOT NULL, -- 取引手数料
    transaction_at DATE, -- 取引日
    FOREIGN KEY(owner_id) REFERENCES owners(id),
    FOREIGN KEY(stock_id) REFERENCES stocks(id),
    FOREIGN KEY(broker_id) REFERENCES brokers(id)
);
 */